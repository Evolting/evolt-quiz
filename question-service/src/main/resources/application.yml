spring:
  application:
    name: question-service
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5433/questiondb}
    username: ${SPRING_DATASOURCE_USERNAME:postgres}
    password: ${SPRING_DATASOURCE_PASSWORD:12345}
  jpa:
    hibernate:
      ddl-auto: ${SPRING_JPA_HIBERNATE_DDL_AUTO:create}
    show-sql: ${SPRING_JPA_SHOW_SQL:true}
    properties:
      hibernate:
        dialect: ${SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT:org.hibernate.dialect.PostgreSQLDialect}
  sql:
    init:
      mode: always
      platform: postgres
  cloud:
    function:
      definition: generateQuestionSet
    stream:
      bindings:
        generateQuestionSet-in-0:
          destination: ADD-NEW-QUIZ
          group: ${spring.application.name}
        notifyQuestionSetGenerated-out-0:
          destination: QUESTION-SET-GENERATED
      kafka:
        binder:
          brokers:
            - ${SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS:localhost:9092}

eureka:
  instance:
    preferIpAddress: ${eureka.instance.preferIpAddress:true}
  client:
    fetchRegistry: ${eureka.client.fetchRegistry:true}
    registerWithEureka: ${eureka.client.registerWithEureka:true}
    serviceUrl:
      defaultZone: ${eureka.client.serviceUrl.defaultZone:http://localhost:8761/eureka/}

h2:
  console:
    enabled: true

server:
  port: 8080
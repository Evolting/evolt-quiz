spring:
  application:
    name: quiz-service
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/quizdb}
    username: ${SPRING_DATASOURCE_USERNAME:postgres}
    password: ${SPRING_DATASOURCE_PASSWORD:1234}
  jpa:
    hibernate:
      ddl-auto: ${SPRING_JPA_HIBERNATE_DDL_AUTO:create}
    show-sql: ${SPRING_JPA_SHOW_SQL:true}
    properties:
      hibernate:
        dialect: ${SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT:org.hibernate.dialect.PostgreSQLDialect}
  sql:
    init:
      mode: always
      platform: postgres
  cloud:
    function:
      definition: updateQuizQuestions
    stream:
      bindings:
        notifyAddNewQuiz-out-0:
          destination: ADD-NEW-QUIZ
        updateQuizQuestions-in-0:
          destination: QUESTION-SET-GENERATED
      kafka:
        binder:
          brokers:
            - ${SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS:localhost:9092}

eureka:
  instance:
    preferIpAddress: true
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/

h2:
  console:
    enabled: true

server:
  port: 8090

resilience4j:
  retry:
    configs:
      default:
        maxAttempts: 3
        waitDuration: 1000
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2
  ratelimiter:
    configs:
      default:
        timeout-duration:
          seconds: 1
        limit-refresh-period:
          seconds: 5
        limit-for-period: 1

services:
  service-registry:
    image: service-registry:v1
    container_name: service-registry
    ports:
      - 8761:8761
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    environment:
      EUREKA_INSTANCE_HOSTNAME: service-registry
      EUREKA_CLIENT_FETCH_REGISTRY: "false"
      EUREKA_CLIENT_REGISTER_WITH_EUREKA: "false"

  api-gateway:
    image: api-gateway:v1
    container_name: api-gateway
    ports:
      - 8765:8765
    depends_on:
      service-registry:
        condition: service_healthy
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://service-registry:8761/eureka/
      EUREKA_CLIENT_REGISTER_WITH_EUREKA: "true"
      EUREKA_CLIENT_FETCH_REGISTRY: "true"
      EUREKA_INSTANCE_PREFER_IP_ADDRESS: "true"

  question-service:
    image: question-service:v1
    container_name: question-service
    ports:
      - 8080:8080
    depends_on:
      service-registry:
        condition: service_healthy
      question-service-db:
        condition: service_started
    environment:
      # Database Configuration
      SPRING_DATASOURCE_URL: jdbc:postgresql://question-service-db:5432/questiondb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 1234
      SPRING_JPA_HIBERNATE_DDL_AUTO: create
      SPRING_JPA_SHOW_SQL: "true"
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
      SPRING_JPA_DEFER_DATASOURCE_INITIALIZATION: "true"
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379

      # Eureka/Service Registry Configuration
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://service-registry:8761/eureka/
      EUREKA_CLIENT_REGISTER_WITH_EUREKA: "true"
      EUREKA_CLIENT_FETCH_REGISTRY: "true"
      EUREKA_INSTANCE_PREFER_IP_ADDRESS: "true"

      # Kafka/Cloud Stream Configuration
      SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS: kafka:9092

      # Application Name
      SPRING_APPLICATION_NAME: question-service

  quiz-service:
    image: quiz-service:v1
    container_name: quiz-service
    ports:
      - 8090:8090
    depends_on:
      service-registry:
        condition: service_healthy
      quiz-service-db:
        condition: service_started
    environment:
      # Database Configuration
      SPRING_DATASOURCE_URL: jdbc:postgresql://quiz-service-db:5432/quizdb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 1234
      SPRING_JPA_HIBERNATE_DDL_AUTO: create
      SPRING_JPA_SHOW_SQL: "true"
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
      SPRING_JPA_DEFER_DATASOURCE_INITIALIZATION: "true"
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379

      # Eureka/Service Registry Configuration
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://service-registry:8761/eureka/
      EUREKA_CLIENT_REGISTER_WITH_EUREKA: "true"
      EUREKA_CLIENT_FETCH_REGISTRY: "true"
      EUREKA_INSTANCE_PREFER_IP_ADDRESS: "true"

      # Kafka/Cloud Stream Configuration
      SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS: kafka:9092

      # Application Name
      SPRING_APPLICATION_NAME: quiz-service

  question-service-db:
    image: postgres:14-alpine
    container_name: question-service-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: questiondb
    ports:
      - 5432:5432

  quiz-service-db:
    image: postgres:14-alpine
    container_name: quiz-service-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: quizdb
    ports:
      - 5433:5432

  redis:
    image: redis:6.2.6
    container_name: redis
    ports:
      - 6379:6379

  kafka:
    image: apache/kafka:4.1.0
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:29093
      KAFKA_LISTENERS: PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://kafka:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8069:8080"
    restart: always
    environment:
      KAFKA_CLUSTERS_0_NAME: "kraft-cluster"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
    depends_on:
      - kafka